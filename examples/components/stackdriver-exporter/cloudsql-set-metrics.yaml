stackdriverExporter:
  install: true

  serviceAccount:
    create: true
    name: stackdriver-exporter
    annotations:
      # For example:
      #   iam.gke.io/gcp-service-account: sa-stackdriver-exporter@product-and-dr-solution.iam.gserviceaccount.com
      # where:
      # * GSA_NAME = sa-stackdriver-exporter
      # * PROJECT_ID = product-and-dr-solution
      iam.gke.io/gcp-service-account: <GSA_NAME>@<PROJECT_ID>.iam.gserviceaccount.com

  stackdriver:
    # The Google Project ID to gather metrics for
    projectId: "FALSE"
    # Max number of retries that should be attempted on 503 errors from Stackdriver
    maxRetries: 0
    # How long should Stackdriver_exporter wait for a result from the Stackdriver API
    httpTimeout: 10s
    # Max time between each request in an exp backoff scenario
    maxBackoff: 5s
    # The amount of jitter to introduce in an exp backoff scenario
    backoffJitter: 1s
    # The HTTP statuses that should trigger a retry
    retryStatuses: 503
    # Drop metrics from attached projects and fetch `project_id` only
    dropDelegatedProjects: false

    metrics:
      # The prefixes to gather metrics for, we default to just CPU metrics.
      typePrefixes: 'cloudsql.googleapis.com/database/cpu/utilization,cloudsql.googleapis.com/database/postgresql/num_backends,cloudsql.googleapis.com/database/network/received_bytes_count,cloudsql.googleapis.com/database/network/sent_bytes_count,cloudsql.googleapis.com/database/postgresql/deadlock_count,cloudsql.googleapis.com/database/memory/utilization,cloudsql.googleapis.com/database/memory/total_usage,cloudsql.googleapis.com/database/memory/usage,cloudsql.googleapis.com/database/disk/write_ops_count,cloudsql.googleapis.com/database/disk/read_ops_count,cloudsql.googleapis.com/database/postgresql/insights/pertag/latencies,cloudsql.googleapis.com/database/postgresql/blocks_read_count,cloudsql.googleapis.com/database/replication/replica_lag,cloudsql.googleapis.com/database/postgresql/replication/replica_byte_lag,cloudsql.googleapis.com/database/disk/bytes_used,cloudsql.googleapis.com/database/memory/quota'
      # The frequency to request
      interval: '5m'
      # How far into the past to offset
      offset: '0s'
      # Offset for the Google Stackdriver Monitoring Metrics interval into the past by the ingest delay from the metric's metadata.
      ingestDelay: false

  serviceMonitor:
    install: true
    interval: 5m
    telemetryPath: /metrics
    labels:
      app.kubernetes.io/component: monitoring
    timeout: 30s
