blackboxExporter:
  install: true
  config:
    modules:
      http_2xx_example:
        prober: http
        timeout: 5s
        http:
          valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
          valid_status_codes: []  # Defaults to 2xx
          method: GET
          headers:
            Host: vhost.example.com
            Accept-Language: en-US
            Origin: example.com
          no_follow_redirects: false
          fail_if_ssl: false
          fail_if_not_ssl: false
          fail_if_body_matches_regexp:
            - "Could not connect to database"
          fail_if_body_not_matches_regexp:
            - "Download the latest version here"
          fail_if_header_matches:  # Verifies that no cookies are set
            - header: Set-Cookie
              allow_missing: true
              regexp: '.*'
          fail_if_header_not_matches:
            - header: Access-Control-Allow-Origin
              regexp: '(\*|example\.com)'
          tls_config:
            insecure_skip_verify: false
          preferred_ip_protocol: "ip4"  # defaults to "ip6"
          ip_protocol_fallback: false  # no fallback to "ip6"
      http_post_2xx:
        prober: http
        timeout: 5s
        http:
          method: POST
          headers:
            Content-Type: application/json
          body: '{}'
      dns_udp_example:
        prober: dns
        timeout: 5s
        dns:
          query_name: "www.prometheus.io"
          query_type: "A"
          valid_rcodes:
            - NOERROR
          validate_answer_rrs:
            fail_if_matches_regexp:
              - ".*127.0.0.1"
            fail_if_all_match_regexp:
              - ".*127.0.0.1"
            fail_if_not_matches_regexp:
              - "www.prometheus.io.\t300\tIN\tA\t127.0.0.1"
            fail_if_none_matches_regexp:
              - "127.0.0.1"
          validate_authority_rrs:
            fail_if_matches_regexp:
              - ".*127.0.0.1"
          validate_additional_rrs:
            fail_if_matches_regexp:
              - ".*127.0.0.1"
      dns_soa:
        prober: dns
        dns:
          query_name: "prometheus.io"
          query_type: "SOA"
      dns_tcp_example:
        prober: dns
        dns:
          transport_protocol: "tcp"  # defaults to "udp"
          preferred_ip_protocol: "ip4"  # defaults to "ip6"
          query_name: "www.prometheus.io"
  serviceMonitor:
    defaults:
      additionalMetricsRelabels: {}
      interval: 30s
      scrapeTimeout: 30s
      module: http_2xx
    targets:
      - name: example-http-get
        url: https://example.com:8080
        interval: 120s
        scrapeTimeout: 120s
        module: http_2xx_example
        additionalMetricsRelabels: {}
      - name: example-http-post
        url: http://example.com
        interval: 120s
        scrapeTimeout: 60s
        module: http_post_2xx
        additionalMetricsRelabels: {}
      - name: example-dns-udp
        url: 8.8.8.8
        interval: 60s
        scrapeTimeout: 60s
        module: dns_udp_example
        additionalMetricsRelabels: {}
      - name: example-dns-soa
        url: 8.8.8.8
        interval: 60s
        scrapeTimeout: 60s
        module: dns_soa
        additionalMetricsRelabels: {}
      - name: example-dns-tcp
        url: 8.8.8.8
        interval: 60s
        scrapeTimeout: 60s
        module: dns_tcp_example
        additionalMetricsRelabels: {}
